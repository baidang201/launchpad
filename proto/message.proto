syntax = "proto3";
package  launchpadpackage;

message Worker {
  string stash_account = 1;
  string controller_account = 2;
  string payout = 3;
  bool   online_status = 4;
  bool   stake_enough = 5;
  string accumulated_stake = 6;  // bignum
  string profit_last_month = 7;  // bignum
  string worker_stake = 8;  // bignum
  string user_stake = 9;  // bignum
  int32  stake_account_num = 10;
  float  commission = 11;
  int32  task_score = 12;
  int32  machine_score = 13;
  double apy = 14;
  int32  diff_to_min_stake = 15;
  double stake_to_min_apy = 16;
}

message RoundInfo {
  int32 total = 1;
  repeated Worker workers = 2;
}

message Globalstatistics {
  float apy = 1;
  int32 round = 2;
  int32 cycle_time = 3;
  int32 online_worker_num = 4;
  int32 worker_num = 5;
  string stake_sum = 6;  //bignum
  float  stake_supply_rate = 7;
  string avg_stake = 8;  //bignum
  string reward_last_round = 9;
}

message Status {
  int32 success = 1;
  string msg = 2;
}

//worker
message WorkerRequest {
  int32  page = 1;
  int32  page_size = 2;
  bool   filter_runing = 3;
  bool   filter_stake_enough = 4;
  bool   filter_commission_less_then = 5;
  string sort_field_name = 6;
  bool   sort_asc = 7; // true:ase   false:desc
  repeated string filter_stash_accounts = 8;
}

message WorkerResponse {
  Status status = 1;
  RoundInfo result = 2;
}

//GlobalStatistics
message GlobalStatisticsRequest {
}

message GlobalStatisticsResponse {
  Status status = 1;
  Globalstatistics result = 2;
}

//stakes
message AvgStake {
  message SubMsg {
    string avg_stake = 1;//bignum
    int32  round = 2;
    int32  timestamp = 3;
  }
  repeated SubMsg avg_stake_infos = 1;
}

message AvgStakeRequest {
}

message AvgStakeResponse {
  Status status = 1;
  AvgStake result = 2;
}

//stakeinfo
message StakeInfo {
  message SubMsg {
    string accumulated_stake = 1;
    string worker_stake = 2;
    int32  round = 3;
    int32  timestamp = 4;
  }
  repeated SubMsg stake_infos = 1;
}

message StakeInfoRequest {
  string stash_account = 1;
}

message StakeInfoResponse {
  Status status = 1;
  StakeInfo result = 2;
}

//rewardpenalty
message RewardPenalty {
  message SubMsg {
    string reward = 1;  
    string penalty = 2;  
    int32  round = 3;
    int32  timestamp = 4;
  }
  repeated SubMsg reward_penalty_infos = 1;
}

message RewardPenaltyRequest {
  string stash_account = 1;
}

message RewardPenaltyResponse {
  Status status = 1;
  RewardPenalty result = 2;
}

//avgreward
message AvgReward {
  message SubMsg {
    string avg_reward = 1;  
    int32  round = 2;
    int32  timestamp = 3;
  }
  repeated SubMsg avg_reward_infos = 1;

}

message AvgRewardRequest {
  string stash_account = 1;
}

message AvgRewardResponse {
  Status status = 1;
  AvgReward result = 2;
}

//apy
message Apy {
  message SubMsg {
    float  apy = 1;
    int32  round = 2;
    int32  timestamp = 3;
  }
  repeated SubMsg apy_infos = 1;
}
message ApyRequest {
  string stash_account = 1;
}
message ApyResponse {
  Status status = 1;
  Apy result = 2;
}

//commission
message Commission {
  message SubMsg {
    float  commission = 1;
    int32  round = 2;
    int32  timestamp = 3;
  }
  repeated SubMsg commission_infos = 1;
}
message CommissionRequest {
  string stash_account = 1;
}
message CommissionResponse {
  Status status = 1;
  Commission result = 2;
}

//notice
message Notice {
  string notice = 1;
}
message NoticeRequest {
  string stash_account = 1;
}
message NoticeResponse {
  Status status = 1;
  Notice result = 2;
}

//common
message CommonRequest {
  oneof request {
    WorkerRequest worker_request = 1;
    GlobalStatisticsRequest global_statistics_request = 2;
    AvgStakeRequest avg_stake_request = 3;
    StakeInfoRequest stake_info_request = 4;
    RewardPenaltyRequest reward_penalty_request = 5;
    AvgRewardRequest avg_reward_request = 6;
    ApyRequest apy_request = 7;
    CommissionRequest commission_request = 8;
    NoticeRequest notice_request = 9;
  }
}

message CommonResponse {
  Status status = 1;
}